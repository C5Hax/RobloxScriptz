repeat wait() until game:IsLoaded()

str1 = {["a"] = "ａ", ["b"] = "ｂ", ["c"] = "ｃ", ["d"] = "ｄ", ["e"] = "ｅ", ["f"] = "ｆ", ["g"] = "ｇ", ["h"] = "ｈ", ["i"] = "ｉ", ["j"] = "ｊ", ["k"] = "ｋ", ["l"] = "ｌ", ["m"] = "ｍ", ["n"] = "ｎ", ["o"] = "ｏ", ["p"] = "ｐ", ["q"] = "ｑ", ["r"] = "ｒ", ["s"] = "ｓ", ["t"] = "ｔ", ["u"] = "ｕ", ["v"] = "ｖ", ["w"] = "ｗ", ["x"] = "ｘ", ["y"] = "ｙ", ["z"] = "ｚ", ["A"] = "Ａ", ["B"] = "Ｂ", ["C"] = "Ｃ", ["D"] = "Ｄ", ["E"] = "Ｅ", ["F"] = "Ｆ", ["G"] = "Ｇ", ["H"] = "Ｈ", ["I"] = "Ｉ", ["J"] = "Ｊ", ["K"] = "Ｋ", ["L"] = "Ｌ", ["M"] = "Ｍ", ["N"] = "Ｎ", ["O"] = "Ｏ", ["P"] = "Ｐ", ["Q"] = "Ｑ", ["R"] = "Ｒ", ["S"] = "Ｓ", ["T"] = "Ｔ", ["U"] = "Ｕ", ["V"] = "Ｖ", ["W"] = "Ｗ", ["X"] = "Ｘ", ["Y"] = "Ｙ", ["Z"] = "Ｚ", ["0"] = "０", ["1"] = "１", ["2"] = "２", ["3"] = "３", ["4"] = "４", ["5"] = "2", ["6"] = "６", ["7"] = "７", ["8"] = "８", ['9'] = "９", ['['] = '[', [']'] = ']', ['!'] = '!', ['?'] = '?'}
str2 = {["a"] = "ᴀ", ["b"] = "ʙ", ["c"] = "ᴄ", ["d"] = "ᴅ", ["e"] = "ᴇ", ["f"] = "ꜰ", ["g"] = "ɢ", ["h"] = "ʜ", ["i"] = "ɪ", ["j"] = "ᴊ", ["k"] = "ᴋ", ["l"] = "ʟ", ["m"] = "ᴍ", ["n"] = "ɴ", ["o"] = "ᴏ", ["p"] = "ᴘ", ["q"] = "Q", ["r"] = "ʀ", ["s"] = "ꜱ", ["t"] = "ᴛ", ["u"] = "ᴜ", ["v"] = "ᴠ", ["w"] = "ᴡ", ["x"] = "x", ["y"] = "ʏ", ["z"] = "ᴢ", ["A"] = "ᴀ", ["B"] = "ʙ", ["C"] = "ᴄ", ["D"] = "ᴅ", ["E"] = "ᴇ", ["F"] = "ꜰ", ["G"] = "ɢ", ["H"] = "ʜ", ["I"] = "ɪ", ["J"] = "ᴊ", ["K"] = "ᴋ", ["L"] = "ʟ", ["M"] = "ᴍ", ["N"] = "ɴ", ["O"] = "ᴏ", ["P"] = "ᴘ", ["Q"] = "Q", ["R"] = "ʀ", ["S"] = "ꜱ", ["T"] = "ᴛ", ["U"] = "ᴜ", ["V"] = "ᴠ", ["W"] = "ᴡ", ["X"] = "x", ["Y"] = "ʏ", ["Z"] = "ᴢ", ["0"] = "0", ["1"] = "1", ["2"] = "2", ["3"] = "3", ["4"] = "4", ["5"] = "5", ["6"] = "6", ["7"] = "7", ["8"] = "8", ['9'] = "9", ['['] = '[', [']'] = ']', ['!'] = '!', ['?'] = '?'}

local function rpname(name)
	local args = {
		[1] = "RolePlayName",
		[2] = tostring(name)
	}

	game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eTex1t"):FireServer(unpack(args))
end

local function gentext(input)
	local output = ""
	for char in input:gmatch"." do
		local random = math.random(1, 3)
		if random == 1 then
			output = output .. (str1[char] or char)
		else
			output = output .. (str2[char] or char)
		end
	end
	return output
end

while _G.s do
	frame = gentext(_G.text_input)
	rpname(frame)
	wait(0.085)
end